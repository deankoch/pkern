% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pkern_estim.R
\name{pkern_GLS}
\alias{pkern_GLS}
\title{Generalized least squares (GLS) estimator}
\usage{
pkern_GLS(g_obs, pars, X = NA, fac = NULL, method = "chol", out = "b")
}
\arguments{
\item{g_obs}{list of form returned by \code{pkern_grid} (with entries 'gdim', 'gres', 'gval')}

\item{pars}{list of form returned by \code{pkern_pars} (with entries 'y', 'x', 'eps', 'psill')}

\item{X}{matrix or NA, the linear predictors (in columns) excluding intercept}

\item{fac}{matrix or list, (optional) pre-computed covariance matrix factorization}

\item{method}{character, the factorization to use: 'chol' (default) or 'eigen'}

\item{out}{character, either 'c' (coefficients) or 'z' (linear predictor)}
}
\value{
numeric vector of length equal to one plus the number of columns in \code{X}
}
\description{
Computes the GLS equation for coefficients of the linear predictor E(Z) = Xb
}
\details{
b =  X^T V^{-1} X )^{-1} X^T z

where V is the covariance matrix for data z, and X is a matrix of covariates. If
\code{X=NA}, X in the above is replaced by an intercept column (a vector of 1's) and this
expression is a length-1 numeric (the estimated spatially constant mean). Otherwise it
is a vector of coefficients whose first entry is the mean and subsequent entries are
coefficients to multiply the columns of the predictor matrix \code{X}

If supplied, the columns of matrix \code{X} should be independent, and the number of rows should
match the number of observed grid points (non-\code{NA} values in \code{g_obs$gval}). An intercept
column is appended to this linear predictor matrix before evaluating the GLS expression
(without checking if it's there already). Do not include an intercept column in
argument \code{X}!

When \code{out='z'}, the function multiplies the GLS coefficients by \code{X} (with appended
intercept column) to get the linear predictor for E(z)

Note that the factorization returned in fac_X is for the model scaled by partial sill
}
\examples{
# set up example grid, data, covariance parameters
gdim = c(10, 11)
n_obs = prod(gdim)
g_obs = pkern_grid(gdim)
pars = modifyList(pkern_pars(g_obs, 'gau'), list(psill=2))

# generate some covariates and data
n_betas = 3
betas = rnorm(n_betas)
X_all = cbind(1, matrix(rnorm(n_obs*(n_betas-1)), n_obs))
g_obs$gval = rnorm(n_obs) + (X_all \%*\% betas)

# linear predictors should not include an intercept column
X = X_all[,-1]

# find the GLS coefficients
betas |> print()
betas_est = pkern_GLS(g_obs, pars, X)
betas_est |> print()

# their product with X, the linear predictor
max(abs( pkern_GLS(g_obs, pars, X, out='z') - (X_all \%*\% betas_est) ))

}
