% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pkern_variograms.R
\name{pkern_vario}
\alias{pkern_vario}
\title{Directional sample variograms for regular 2D gridded data}
\usage{
pkern_vario(
  gdim,
  vec,
  lags = NA,
  fit.method = "rmedian",
  diagonal = TRUE,
  gres = NA,
  quiet = FALSE,
  nmax = 10000,
  vcalc = TRUE
)
}
\arguments{
\item{gdim}{vector c(ny, nx) of positive integers, the number of grid lines}

\item{vec}{numeric vector of data, in column vectorized order (length \code{prod(dims)})}

\item{lags}{list c(dy, dx) of positive integer vectors, grid line lags to sample}

\item{fit.method}{character, one of "matheron", "rmean", "rmedian", passed to \code{pkern_xvario}}

\item{diagonal}{logical, if TRUE, semivariogram results are returned also for diagonals}

\item{gres}{length-2 vector of positive numeric, the spacing distance of y and x grid lines}

\item{quiet}{logical, indicating to suppress console output}

\item{nmax}{positive integer, the maximum number of point pairs to process in each sample}

\item{vcalc}{logical, indicates to compute the sample variance (which can be relatively slow)}
}
\value{
list of \code{pkern_xvario} output "x", "y" (and "d1", "d2"); sample variance "v"; and "gres"
}
\description{
A wrapper for calls to \code{pkern_xvario} to get the directional sample variograms
from regular lattice data along the y and x dimensions, and optionally along the
diagonals.
}
\details{
The function makes the appropriate calls to \code{pkern_xvario} and returns the results
in list elements "y", "x". If \code{diagonal=TRUE}, the function also returns "d1" and
"d2", the y and x semivariograms after a 45 degree counterclockwise rotation of the
input grid (see \code{pkern_r45}) assuming equal y and x resolution. For unequal resolution
the rotation angle is \code{atan(gres[2]/gres[1])}.

Note that input \code{lags} is specified in terms of grid line indices (integers), not
distances (their product with the x or y resolution). However, non-integer separation
distances can be specified by setting the resolution of the input grid (dy, dx) in
argument \code{gres}. When \code{gres} is supplied, the output "lags" values are scaled accordingly
and \code{dmax} is interpreted as a distance, rather than a number of grid lines.

When \code{gres} is not supplied, the function assumes that the x grid lines have the same
spacing distance (1) as the y grid lines. In this case, diagonally adjacent
grid points have separation distance \code{sqrt(2)}.
}
\examples{
gdim = c(1e2, 2e2)
pars.1d = pkern_corr('gau')
pars.2d = list(y=pars.1d, x=pars.1d, psill=1)
vec = pkern_sim(pars.2d, gdim)

# sample first 10 lags and plot
vario = pkern_vario(gdim, vec, lags=seq(10), quiet=TRUE)
pkern_vario_plot(vario, pars.2d)

# example with unequal resolution and multiple replicates
gres = c(2,1)
nrep = 10
vec = lapply(seq(nrep), \(i) pkern_sim(pars.2d, gdim, gres=gres, makeplot=FALSE))
vario = pkern_vario(gdim, vec, lags=seq(10), gres=gres, quiet=TRUE)
pkern_vario_plot(vario, pars.2d)

}
