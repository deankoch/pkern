% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pkern_indexing.R
\name{pkern_snap}
\alias{pkern_snap}
\title{Snap a set of (possibly irregular) points to a larger grid}
\usage{
pkern_snap(pts, g, regular = FALSE, nstart = 25, makeplot = TRUE)
}
\arguments{
\item{pts, }{numeric vector or n x 2 matrix (with columns for x and y) of point coordinates}

\item{g, }{RasterLayer, or list of x, y grid lines, or length-2 vector of dimensions (nx, ny)}

\item{regular, }{logical, indicating to select a regular set of grid lines}

\item{nstart, }{passed to base:kmeans}

\item{makeplot, }{logical, indicating to plot the ordered coordinates and assigned grid lines}
}
\value{
list
}
\description{
A heuristics-based method of snapping points in \code{pts} to the grid \code{g}.
}
\details{
If \code{pts} is a vector of x coordinates, the function first snaps them to \code{g}, the computes
the lag-1 differences in their their ordered indices in \code{g} and passes this vector to
base::kmeans for a k=2 clustering. The cluster having lower mean is interpreted as a
within-column group, whereas the higher mean group delineates jump points between columns.
This information is used to group \code{pts} into columns, which are then snapped to the
nearest grid line in \code{g} by least median distance.

If \code{pts} is a vector, the function returns in a list: the grid line values ('gval'),
their index in the full grid ('gid'), and an indexing vector mapping elements (or rows)
of \code{pts} to the snapped grid line ('id'). If \code{pts} is a 2D set of points (matrix or sf
object), the the function is applied to each dimension separately with the results
returned as list elements 'x' and 'y'. In the 1D case, \code{g} should be a vector supplying
the grid line locations, and in the 2D case, a list of two vectors (the x and y grid
lines) or a RasterLayer.

If \code{regular=TRUE}, the function regularizes the output grid lines (see \code{pkern_regular})

In the 1D case, \code{makeplot} can be passed a character string instead of \code{TRUE}, to set a
title for the plot.
}
\examples{
resx = 10
resy = 10
nx = 25
ny = 30
xy = list(resx*seq(nx), resy*seq(ny))
coords = expand.grid(xy) + rnorm(nx*ny)
gxy.snap = pkern_snap(pts=coords, g=xy, regular=F)
plot(coords)
abline(v = gxy.snap$x$gval)
abline(h = gxy.snap$y$gval)
}
