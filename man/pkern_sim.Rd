% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pkern_model.R
\name{pkern_sim}
\alias{pkern_sim}
\title{Random draw from multivariate normal distribution for grids}
\usage{
pkern_sim(g, pars = pkern_pars(g), fac = NULL)
}
\arguments{
\item{g}{any object accepted or returned by \code{pkern_grid}}

\item{pars}{list, covariance parameters in form returned by \code{pkern_pars}}

\item{fac}{list, optional pre-computed factorization of component correlation matrices}
}
\value{
numeric vector, the vectorized grid data
}
\description{
Generates a random draw from the multivariate Gaussian distribution for the
covariance model \code{pars} on grid \code{g}, with mean zero.
}
\details{
\code{pars} and \code{g} define the model's covariance matrix V. This function uses \code{base::rnorm}
to get a vector of independent standard normal variates, which it multiplies by the square
root of the covariance matrix, V, for the desired model (as defined by \code{pars} and \code{g}). The
result has a multivariate normal distribution with mean zero and covariance V.

Multiple independent draws can be computed more efficiently by reusing the factorization
of V. This can be pre-computed with \code{pkern_var} and supplied in \code{fac}, or a multi-layer
\code{g} can be supplied (see examples).
}
\examples{

# example grid and covariance parameters
gdim = c(100, 200)
g = pkern_grid(gdim)
pars_gau = pkern_pars(g)

# this example has a large nugget effect
gval = pkern_sim(g, pars=pars_gau)
pkern_plot(matrix(gval, gdim))

# plot with yx coordinates
g_sim = modifyList(g, list(gval=gval))
pkern_plot(g_sim)

# repeat with smaller nugget effect for less noisy data
pars_smooth = modifyList(pars_gau, list(eps=1e-2))
gval_smooth = pkern_sim(g, pars_smooth)
g_sim_smooth = modifyList(g, list(gval=gval_smooth))
pkern_plot(g_sim_smooth)

# the nugget effect can be very small, but users should avoid eps=0
pars_smoother = modifyList(pars_gau, list(eps=1e-12))
gval_smoother = pkern_sim(g, pars_smoother)
g_sim_smoother = modifyList(g, list(gval=gval_smoother))
pkern_plot(g_sim_smoother)

# multi-layer example
n_pt = prod(gdim)
n_layer = 3
g_multi = pkern_grid(list(gdim=gdim, gval=matrix(NA, n_pt, n_layer)))
gval_multi = pkern_sim(g_multi, pars_smoother)
g_sim_multi = modifyList(g, list(gval=gval_multi))
pkern_plot(g_sim_multi, layer=1)
pkern_plot(g_sim_multi, layer=2)
pkern_plot(g_sim_multi, layer=3)


}
