% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pkern_computation.R
\name{pkern_sim}
\alias{pkern_sim}
\title{Simulate grid point values of a random field with separable covariance kernel}
\usage{
pkern_sim(
  pars,
  dims = c(25, 25),
  precompute = FALSE,
  makeplot = TRUE,
  maxx = maxx
)
}
\arguments{
\item{pars}{a kernel parameters list ("k", "kp"), or list of two of them ("x", "y")}

\item{dims}{integer vector c(nx, ny), the grid size}

\item{precompute}{logical or list, for caching computationally expensive operations}

\item{makeplot}{logical, whether to plot the results}

\item{maxx, }{plotting resolution, passed to \code{pkern_plot} (when \code{makeplot==TRUE})}
}
\value{
a numeric matrix with dimensions \code{rev(dims)} or a list of precomputed objects
}
\description{
Generates a simulation from the Gaussian random field with separable spatial
covariance kernel \code{pars} over the regular grid of size \code{dims}.
}
\details{
Random vectors are generated by first drawing an iid normal vector of length
\code{n = prod(dims)} (using \code{base::rnorm}), then taking its product with the covariance
matrix square root (via eigendecompositions). The result is returned (invisibly)
as a matrix.

\code{pars} should be a list containing two kernel parameter definitions lists ("x" and
"y"), both compatible with \code{pkern_corr}, and, optionally, pointwise variance decomposed
as "v" and "nug" (the nugget variance). Defaults for "v" and "nug" are 1 and zero,
respectively.

When \code{precompute==TRUE}, the function returns a list containing: "dims", the grid size;
"v", the list of ("x" and "y") component covariance matrices; and "ed" the list of their
eigendecompositions (as returned by \code{base::eigen}). This list can be passed
to subsequent \code{pkern_sim} calls in argument \code{precompute} to skip some computationally
expensive steps. In that case, note that argument \code{dims} is ignored (overwritten
by \code{precompute$dims}).

Note also that the nugget effect is dealt with after precomputing - ie full covariance
matrix for the grid is equal to \code{kronecker(precompute$v$x, precompute$v$y)} plus the
nugget effect (added to diagonals).

Note that eigendecomposition can produce negative eigenvalues (impossible in theory but
common in practice, due to numerical precision limits of the computer), a small nugget
effect is automatically added (with a warning) to make the component covariance matrices
numerically non-singular and allow simulation to proceed.
}
\examples{
# basic usage with Gaussian kernel and default settings
pars = pkern_corr('gau')
sim = pkern_sim(pars)
str(sim)
pkern_sim(pars, dims=c(1e2, 2e2))

# store eigendecompositions to speed up repeated simulations
pre = pkern_sim(pars, dims=c(5e2, 5e2), precompute=TRUE, makeplot=FALSE)
str(pre)
pkern_sim(pars, precompute=pre)

# example of numerically singular matrices triggering nugget effect
pars = modifyList(pars, list(kp=1e2))
pkern_sim(pars)
}
