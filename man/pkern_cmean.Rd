% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pkern_estim.R
\name{pkern_cmean}
\alias{pkern_cmean}
\title{Compute ordinary kriging predictor (or variance) for data on a grid}
\usage{
pkern_cmean(
  g_obs,
  pars,
  X = NA,
  fac = NULL,
  out = "p",
  method = "chol",
  quiet = FALSE
)
}
\arguments{
\item{g_obs}{list of form returned by \code{pkern_grid} (with entries 'gdim', 'gres', 'gval')}

\item{pars}{list of form returned by \code{pkern_pars} (with entries 'y', 'x', 'eps', 'psill')}

\item{X}{numeric, vector, matrix, or NA: the mean, or its linear predictors}

\item{fac}{(optional) pre-computed factorization of covariance matrix scaled by partial sill}

\item{out}{character, the return value, one of 'predictor', 'variance', or 'm'}

\item{quiet}{logical indicating to suppress console output}
}
\value{
numeric matrix, the predicted values (or their variance)
}
\description{
Evaluates the ordinary kriging equations in section 3 of Cressie (1993) over the
grid defined in \code{g_obs}. These are the predicted values minimizing mean squared
prediction error under the covariance model specified by \code{pars}.
}
\details{
Set \code{makev=TRUE} to return the pointwise kriging variance. This takes approximately
n_obs times longer to evaluate than \code{makev=FALSE}.

The covariance factorization \code{fac} can be pre-computed using \code{pkern_var(..., scaled=TRUE)}
to speed up repeated calls where only the observed data values change (ie same covariance
structure \code{pars}, and same NA structure in the data). Note that the kriging variance does
not change in this case and only needs to be computed once.
}
\examples{
# make example grid and data
n = 25^2
n_obs = 10
g_obs = pkern_grid(sqrt(n))
idx_obs = sample.int(n, n_obs)
g_obs$gval[idx_obs] = rnorm(n_obs)
pars = pkern_pars('gau', g_obs)
g_pred = pkern_cmean(g_obs, pars)
g_var = pkern_cmean(g_obs, pars, makev=TRUE, quiet=TRUE)
#g_obs |> pkern_plot()
#g_obs |> modifyList(list(gval=g_pred)) |> pkern_plot()
#g_obs |> modifyList(list(gval=g_var)) |> pkern_plot()

}
