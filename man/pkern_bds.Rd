% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pkern_pars.R
\name{pkern_bds}
\alias{pkern_bds}
\title{Set default parameter covariance parameter bounds}
\usage{
pkern_bds(pars, g, var_obs = NULL, var_mult = 2)
}
\arguments{
\item{pars}{list or character vector of 1-2 kernel names (see \code{pkern_pars})}

\item{g}{list, a pkern grid definition (or object accepted by \code{pkern_grid})}

\item{var_obs}{positive numeric, the sample variance of data \code{g$gval}}

\item{var_mult}{numeric > 1, constant to multiply by \code{var_obs} to get upper bounds}
}
\value{
a data frame of initial values and lower/upper bounds for the parameters in \code{pars}
}
\description{
Returns a data-frame of initial values and upper/lower bounds on covariance
parameters for the kernel names in \code{pars}.
}
\details{
Range parameters (\code{y.rho} and \code{x.rho}) are bounded by the shortest and longest
inter-point distances along the corresponding dimension (y or x). This is
computed by taking the element-wise product of dimensions and resolution, ie
\code{g$gres * g$gdim}. Ranges are initialized to the geometric mean of the upper
and lower bounds.

Variance bounds centered around \code{var_obs}, which by default is set to the sample
variance of the data in \code{g$gval}. \code{eps} (measurement variance) and \code{psill} (partial
sill) are both initialized to one half of \code{var_obs}, bounded above by \code{var_obs}
times \code{var_mult}, and bounded below by a small positive number (\code{1e-6}). Note that
while \code{eps=0} produces valid models in theory, in practice \code{eps>0} is often
necessary for numerical stability.

Shape parameter bounds are hard-coded, and are set conservatively to avoid problems
with numerical precision in functions like \code{exp} and \code{gamma} when evaluating very
large or small distances.
}
\examples{
gdim = c(10, 15)
z = prod(gdim) |> rnorm()
g = pkern_grid(gdim) |> modifyList(list(gval=z))
pkern_bds('mat', g)
pkern_bds('mat', g, lower=0)
pkern_bds('mat', g, rows=c('eps', 'psill'), lower=c(0, 0.5))
}
