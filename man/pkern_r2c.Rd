% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pkern_indexing.R
\name{pkern_r2c}
\alias{pkern_r2c}
\title{Swap grid indices from row-vectorized to column-vectorized order}
\usage{
pkern_r2c(
  gdim,
  in.byrow = TRUE,
  out.byrow = FALSE,
  flipx = FALSE,
  flipy = FALSE
)
}
\arguments{
\item{gdim}{c(ni, nj), the number of rows and columns in the grid}

\item{in.byrow}{logical indicating if source indexing is row-vectorized}

\item{out.byrow}{logical indicating if destination indexing is row-vectorized}

\item{flipx}{logical indicating to flip the grid left-to-right}

\item{flipy}{logical indicating to flip the grid top-to-bottom}
}
\value{
a reordering for the vectorized grid. ie a permutation of \code{seq(prod(gdim))}
}
\description{
Returns an indexing vector for swapping between various possible vectorization orderings.
}
\details{
\code{pkern} uses column-vectorization, with y decreasing, to mirror mathematical notation
for matrices where rows are numbered from top to bottom. Packages \code{raster} and \code{graphics}
have different conventions, so this function is useful for reordering vectorizations when
switching between methods.

\code{gdim} can be a length-2 vector or a RasterLayer object, from which the dimensions are
extracted.
}
\examples{

# with column vectorized input and no flips, the function does no reindexing
gdim = c(12, 13)
all( pkern_r2c(gdim, in.byrow=FALSE) == seq(prod(gdim)) )

# flip a grid horizontally and vertically
matrix(pkern_r2c(gdim, in.byrow=FALSE, flipx=TRUE), gdim)
matrix(pkern_r2c(gdim, in.byrow=FALSE, flipy=TRUE), gdim)

# default behaviour is to convert from row to column vectorization
roworder = pkern_r2c(gdim, in.byrow=FALSE, out.byrow=TRUE)
print(roworder)
print(matrix(roworder, gdim[1], byrow=TRUE))
}
